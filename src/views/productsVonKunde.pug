extends layout

block content
  if messages.success
      .notificationgreen
        p= messages.success
         script.
            setTimeout(function() {
            var notification = document.querySelector(".notificationgreen");
            notification.parentNode.removeChild(notification);
            }, 3000);   
  .mainContainer
      .col-2
        .col-3
            .cartStyle
                table
                    tr
                        th Flächenname
                        th Mangat
                        th Emin
                        th Stickstoff
                        th Datum
                        th Neu ziehen
                    each product in UserCart.products
                        tr
                            td(name=product[0])
                              .imgDivFleache
                                p= product[4] 
                                img(name = 'imgFlaeche'+product[0], src=product[8], alt='Bildbeschreibung')
                            td.bestellung
                                input.normal#CheckboxMangat(type='checkbox', name='CheckboxMangat'+product[0], value=(product[10]), checked=(product[9] === 1), disabled ='true')
                            td.bestellung
                                input.normal#CheckboxEmin(type='checkbox', name='CheckboxEmin'+product[0], value=(product[12]), checked=(product[11] === 1), disabled ='true')
                            td.bestellung
                                input.normal#CheckboxStickstoff(type='checkbox', name='CheckboxStickstoff'+product[0], value=(product[14]), checked=(product[13] === 1), disabled ='true')
                            
                            - if (product[6]) 
                                td= product[6].toLocaleDateString('de-DE', { day: '2-digit', month: '2-digit', year: 'numeric' })
                            - else
                                td= 'No Date' 

                            - if ((product[10] == 3 || product[10] == 0) && (product[12] == 3 || product[12] == 0) && (product[14] == 3 || product[14] == 0))
                              td.tdright
                                input#neuBeantragen(type='checkbox', name='neuBeantragen'+product[0], value='1' )
                            - else 
                              td.tdright
                                input#neuBeantragen(type='checkbox', name='neuBeantragen'+product[0], disabled='true', value='1'  )
                          
                    tr 
                        td
                        td
                        td
                        td
                        td
                        td.tdright
                          .btn(id='bestellbutton' class='bestellbutton', onClick='initiateOrderNew()', style='display: none;') Bestellung abschließen
      .col-2
        div#map(style='width: 100%; height: 500px;')
  script.
    
    const neuBeantragen = document.querySelector('#neuBeantragen');
    const CheckboxMangat = document.querySelector('#CheckboxMangat');

    const neuBeantragenCheckboxes = document.querySelectorAll('#neuBeantragen');
    const CheckboxesMangat = document.querySelectorAll('#CheckboxMangat');
    const CheckboxEmin = document.querySelectorAll('#CheckboxEmin');
    const CheckboxStickstoff = document.querySelectorAll('#CheckboxStickstoff');

    const bestellButton = document.getElementById('bestellbutton');
    
    neuBeantragenCheckboxes.forEach(function(checkbox) {
      checkbox.addEventListener('change', function() {
        const bestellbutton = document.querySelector('#bestellbutton');
        const numberPart = checkbox.name.replace('neuBeantragen', '');

        console.log(numberPart)

        const neuBeantragenCheckbox = document.querySelector('input[name=neuBeantragen'+numberPart+']');
        const mangatCheckbox = document.querySelector('input[name=CheckboxMangat'+numberPart+']');
        const CheckboxEmin = document.querySelector('input[name=CheckboxEmin'+numberPart+']');
        const CheckboxStickstoff = document.querySelector('input[name=CheckboxStickstoff'+numberPart+']');
        const mindestensEineAusgewählt = Array.from(neuBeantragenCheckboxes).some(checkbox => checkbox.checked);


        console.log(mangatCheckbox.name)

        
        if (mindestensEineAusgewählt) {
          bestellButton.style.display = 'block';
        } else {
          bestellButton.style.display = 'none';
        }



        if(neuBeantragenCheckbox.checked){


          mangatCheckbox.classList.add('redCheckbox');
          mangatCheckbox.classList.remove('normal');
          mangatCheckbox.disabled = false;

          if(mangatCheckbox.value == 3){
            mangatCheckbox.checked = true;
          } else {
            mangatCheckbox.checked = false;
          }

          CheckboxEmin.classList.add('redCheckbox');
          CheckboxEmin.classList.remove('normal');
          CheckboxEmin.disabled = false;
          
          if(CheckboxEmin.value == 3){
            CheckboxEmin.checked = true;
          } else {
            CheckboxEmin.checked = false;
          }

          CheckboxStickstoff.classList.add('redCheckbox');
          CheckboxStickstoff.classList.remove('normal');
          CheckboxStickstoff.disabled = false;

          if(CheckboxStickstoff.value == 3){
            CheckboxStickstoff.checked = true;
          } else {
            CheckboxStickstoff.checked = false;
          }

          console.error('GGG ' + mindestensEineAusgewählt);

        } else {

          mangatCheckbox.classList.remove('redCheckbox');
          mangatCheckbox.classList.add('normal');
          mangatCheckbox.disabled = true;
          mangatCheckbox.checked = false;

          CheckboxEmin.classList.remove('redCheckbox');
          CheckboxEmin.classList.add('normal');
          CheckboxEmin.disabled = true;
          CheckboxEmin.checked = false;

          CheckboxStickstoff.classList.remove('redCheckbox');
          CheckboxStickstoff.classList.add('normal');
          CheckboxStickstoff.disabled = true;
          CheckboxStickstoff.checked = false;
        }     
      });
    });
    var map = L.map('map').setView([52.849226, 7.913939], 13); // Startpunkt-Koordinaten einstellen

    L.tileLayer('https://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {
      maxZoom: 20,
      subdomains:['mt0','mt1','mt2','mt3'],
      attribution: '© Google'
    }).addTo(map);

    var coordinatesArray = !{JSON.stringify(Fleachen)};
    var flaechenID = 0;
    var coordinates = []; // Hier werden die Koordinaten für die aktuelle Fläche gesammelt

    coordinatesArray.forEach(function (fleachenStueck) {
        // Prüfen, ob die Flächen-ID übereinstimmt (Annahme: Index 0 enthält die Flächen-ID)
      if (flaechenID === fleachenStueck[0]) {
        coordinates.push([fleachenStueck[1], fleachenStueck[2]]);
      } else {
        // Hier zeichnen wir das Polygon mit den gesammelten Koordinaten
        if (coordinates.length > 2) {
          L.polygon(coordinates, { color: 'red', fillColor: 'red', fillOpacity: 0.4 }).addTo(map);
        }

        // Zur nächsten Fläche wechseln und das Koordinaten-Array leeren
        flaechenID = fleachenStueck[0];
        coordinates = [[fleachenStueck[1], fleachenStueck[2]]];
      }
    });

    // Zum Schluss das letzte Polygon zeichnen (falls vorhanden)
    if (coordinates.length > 2) {
      L.polygon(coordinates, { color: 'red', fillColor: 'red', fillOpacity: 0.4 }).addTo(map);
    }

    var drawnItems = new L.FeatureGroup();
    map.addLayer(drawnItems);

    var drawControl = new L.Control.Draw({
      draw: {
        polygon: {
          shapeOptions: {
            color: 'blue'
          },
          allowIntersection: false,
          drawError: {
            color: 'orange',
            timeout: 1000
          },
          showArea: true
        },
        polyline: false,
        circle: false,
        marker: false,
        circlemarker: false
      },
      edit: {
        featureGroup: drawnItems,
        remove: true
      }
    });


    /*var UserFoto = !{JSON.stringify(ClobFoto)};



    console.log(UserFoto);

    for (let index = 0; index < UserFoto.products.length; index++) {
        const imgElement = document.querySelector('#imgFlaeche'+UserFoto[i][0]);
        imgElement.src = UserFoto[i][1]
    }
    */

    function openGoogleMaps() {
        //var coordinates = document.getElementById(".nettop#testid.tdR").value;

        var tdElement = document.querySelector(".nettop#testid.tdR"); // Wähle das td-Element aus
        var textInhalt = tdElement.textContent.trim(); // Extrahiere den Textinhalt und entferne Leerzeichen am Anfang und Ende

        console.error(textInhalt);

        //console.error(coordinates)
        coordinates = textInhalt; // Setze hier deine Koordinaten ein
        var mapsURL = 'https://www.google.com/maps?q=' + coordinates;
        window.open(mapsURL, '_blank');
    }

    function hideModal(){
        var modal = document.querySelector('.products-preview');
        modal.style.display = "none";
    }

    function formatDate(dateString) {
        const date = new Date(dateString);
        const day = String(date.getDate()).padStart(2, '0');
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const year = date.getFullYear();
        return `${day}.${month}.${year}`;
    }


    function handleResponse(status) {
      if (status === 200) {
        const div = document.createElement('div');
        div.classList.add('notificationgreen');
        const p = document.createElement('p');
        p.textContent = 'Produkt erfolgreich hinzugefügt';
        div.appendChild(p);
        document.body.appendChild(div);
        location.reload()
      } else if (status === 300) {
        const div = document.createElement('div');
        div.classList.add('notificationgreen');
        const p = document.createElement('p');
        p.textContent = 'Produkt erfolgreich hinzugefügt';
        div.appendChild(p);
        document.body.appendChild(div);
        location.reload()
        window.location.href = '/products'; // Ändere die URL entsprechend deiner Seite 
      } else {
        const div = document.createElement('div');
        div.classList.add('notificationred');
        const p = document.createElement('p');
        p.textContent = 'Fehler!';
        div.appendChild(p);
        document.body.appendChild(div);
      }
    }
    
    
    function initiateOrderNew() {
      const selectedProducts = [];
      const rows = document.querySelectorAll('tr');

      for (let index = 1; index < rows.length - 1; index++) {
        var EminValue = 'n';
        var MangatValue = 'n';
        var StickstoffValue = 'n';
        const row = rows[index];
        const productNameCell = row.querySelector('td'); // Hier wird das <td>-Element ausgewählt
        const productIdRow = productNameCell.getAttribute('name'); // Hier wird der Wert des "name"-Attributs extrahiert



        const neuBeantragenCheckbox = document.querySelector('input[name=neuBeantragen'+productIdRow+']');

        const MangatCheckbox = document.querySelector('input[name=CheckboxMangat'+productIdRow+']');
        const EminCheckbox = document.querySelector('input[name=CheckboxEmin'+productIdRow+']');
        const StickstoffCheckbox = document.querySelector('input[name=CheckboxStickstoff'+productIdRow+']');


        if (EminCheckbox.checked) {
          EminValue = 'j';
        } 

        if (MangatCheckbox.checked) {
          MangatValue = 'j';
        } 

        if (StickstoffCheckbox.checked) {
          StickstoffValue = 'j';
        }

        //TODO HIER EINTRAGEN WENN INPUT GEÄNDERT WIRD DATE MUSS AUCH!!!
    
        if (neuBeantragenCheckbox.checked) {
          const productInfo = {
            productId: productIdRow,
            //flaechenname: flaechennameValue,
            //dateValue: dateValue,
            EminValue: EminValue,
            MangatValue: MangatValue,
            StickstoffValue: StickstoffValue
          };

          fetch('/products',{
            method: 'POST',
            credentials: 'include',
            headers:{
            'Content-Type': 'application/json',
            },
            body: JSON.stringify(productInfo)
          })

          .then(response => response.status)
          .then(status => handleResponse(300))
          .catch(error => console.error('Error:', error));
          

        }

        
      }
      location.reload()
    }
    


       




